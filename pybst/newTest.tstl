@import bstree
pool: <int> 10
pool: <bstree> 5
pool: <seq> 5
<bstree> := bstree.BSTree()

property: <bstree>.is_valid()

<int> := <[1..50]>
<seq> := [ (<int>, "value"), (<int>, "value"), (<int>, "value") ]
<bstree>.insert(<int>, "value")
assert <bstree>.get_node(<int>) is not None, "Node insertion failed"

<bstree>.insert_from(<seq>)
for i in <seq>:
    assert <bstree>.get_node(i[0]) is not None, "Node insertion failed"

<bstree>.get_max()
<bstree>.get_min()
assert <bstree>.get_element_count() > 0, "Count is 0"
assert <bstree>.get_height() > 0, "Height is 0"
assert <bstree>.is_valid(), "BST is not valid"

<bstree>.preorder()
<bstree>.inorder()
<bstree>.postorder()
<bstree>.levelorder()

assert <bstree>.get_node(<int>) is not None, "Node not found"

<bstree>.delete(<int>)
assert <bstree>.get_node(<int>) is None, "Deletion failed"

<bstree>.delete_from([<int>, <int>, <int>])
